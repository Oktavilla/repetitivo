@import "../config/grid";
@import "../config/typography/base";

@import "../functions/grid-column-width";

@import "../helpers/respond-to";

@import "./spacing";

@mixin grid-item($columns-and-context, $breakpoint: null) {
  $columns: null;
  $context: null;
  $columns-modifier: null;

  @if type-of($columns-and-context) == number {
    $columns: $columns-and-context;
    $context: $grid-columns;
    $columns-modifier: "--#{$columns}";
  } @else {
    $columns: nth($columns-and-context, 1);
    $context: nth($columns-and-context, 3);
    $columns-modifier: "--#{$columns}-of-#{$context}";
  }

  $column-width: grid-column-width($columns, $context);

  @if $breakpoint {
    @include respond-to($breakpoint) {
      .Grid-item-#{$breakpoint}#{$columns-modifier} {
        width: $column-width;
      }
    }
  } @else {
    .Grid-item#{$columns-modifier} {
      width: $column-width;
    }
  }
}

@mixin grid-container {
  display: flex;
  flex-wrap: wrap;
}

@mixin grid-container--padded {
  .Grid-item {
    @include grid-item--padded;
  }
}

@mixin grid-container--compensate-padded {
  @include spacing-compensate-gutter-padding-side;
}

@mixin grid-container--center {
  justify-content: center;
}

@mixin grid-item-base {
  width: 100%;
}

@mixin grid-item--padded {
  @include spacing-gutter-padding-side;
}
